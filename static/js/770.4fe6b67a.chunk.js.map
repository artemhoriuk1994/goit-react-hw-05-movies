{"version":3,"file":"static/js/770.4fe6b67a.chunk.js","mappings":"gQAEaA,EAASC,EAAAA,GAAAA,IAAH,0EAKNC,EAAaD,EAAAA,GAAAA,GAAH,qD,mBCAVE,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC3BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeJ,EAAOK,QAAO,SAAAC,GAAK,OACpCA,EAAMC,MAAMC,cAAcC,SAASR,EAAMO,cADL,IAGxC,OACI,0BACKJ,EAAaM,OAAS,IACnB,wBACKV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,MAAOM,EAAd,EAAcA,YAAd,OACR,UAACf,EAAD,YACI,SAACF,EAAD,CAAQkB,IAAqB,OAAhBD,EAAuBE,EAAAA,GAASF,EAAcG,EAAAA,EAAeC,IAAKV,KAC/E,SAAC,KAAD,CAAMW,GAAE,UAAKN,GAAMO,MAAO,CAAEC,KAAMlB,GAAlC,UAA+C,uBAAIK,QAFtCK,EADT,OAU/B,E,mBCFD,MArBA,YAAgC,IAAXP,EAAU,EAAVA,OACjB,GAA0CgB,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAQhC,OACI,4BACI,kBAAMC,SAAUF,GAPP,SAACG,GACdrB,EAAOqB,EAAKC,MACZH,GACH,IAIO,WACI,0BAAOI,YAAY,kBAAqBN,EAAS,WACjD,mBAAQO,KAAK,SAAb,wBAEJ,SAAC,KAAD,MAIX,ECSD,MA1BA,WAAmB,IAAD,EACd,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAO9B,EAAP,KAAe+B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjC,EAAK,UAAGgC,EAAaE,IAAI,gBAApB,QAAgC,GAa3C,OARAC,EAAAA,EAAAA,YAAU,WACDnC,IAGLoC,EAAAA,EAAAA,IAAoBpC,GAAOqC,MAAK,SAAAZ,GAC5BK,EAASL,EACZ,GACJ,GAAE,CAACzB,KAEA,6BACI,SAAC,EAAD,CAAWI,OAbA,SAAAkC,GACfL,EAA0B,KAAVK,EAAe,CAAEtC,MAAOsC,GAAU,CAAC,EACtD,KAYO,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACI,SAAC1C,EAAD,CAAYC,OAAQA,EAAQC,MAAOA,QAIlD,C","sources":["components/SearchList/SerachList.styled.jsx","components/SearchList/SearchList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Poster = styled.img`\nwidth: 200px;\ndisplay: block;\nmargin-right: 10px`;\n\nexport const SearchItem = styled.li`\ndisplay: flex;\nmargin: 20px;`","import { Link, useLocation } from \"react-router-dom\";\nimport { poster } from \"api/api\";\nimport { Poster, SearchItem } from \"./SerachList.styled\";\nimport PropTypes from 'prop-types';\nimport imageNotFound from '../Cast/images/No_image_available.svg';\n\n\nexport const SearchList = ({ movies, query }) => {\n    const location = useLocation();\n\n    const visibleFilms = movies.filter(movie => (\n        movie.title.toLowerCase().includes(query.toLowerCase())\n    ))\n    return (\n        <main>\n            {visibleFilms.length > 0 && (\n                <ul>\n                    {movies.map(({ id, title, poster_path }) => (\n                        <SearchItem key={id}>\n                            <Poster src={poster_path !== null ? poster + poster_path : imageNotFound} alt={title} />\n                            <Link to={`${id}`} state={{ from: location }} ><p>{title}</p></Link>\n                        </SearchItem>\n                    ))}\n                </ul>\n            )}\n        </main>\n    )\n}\n\nSearchList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string\n    })),\n    query: PropTypes.string.isRequired\n}","import { Outlet } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form'\nimport PropTypes from 'prop-types'\n\nfunction SearchBar({ filter }) {\n    const { register, handleSubmit, reset } = useForm();\n\n\n    const onSubmit = (data) => {\n        filter(data.text)\n        reset();\n    }\n\n    return (\n        <div >\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input placeholder=\"Find your film\" {...register('text')} />\n                <button type=\"submit\">Search</button>\n            </form>\n            <Outlet />\n        </div>\n\n    )\n}\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n    filter: PropTypes.func.isRequired\n}","import { Suspense, useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchBySearchMovies } from \"api/api\";\nimport { SearchList } from \"components/SearchList/SearchList\"\nimport SearchBar from \"components/SearchBar/SearchBar\";\n\nfunction Movies() {\n    const [movies, setMovie] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('query') ?? '';\n\n    const filterFilm = value => {\n        setSearchParams(value !== '' ? { query: value } : {})\n    }\n    useEffect(() => {\n        if (!query) {\n            return\n        }\n        fetchBySearchMovies(query).then(data => {\n            setMovie(data);\n        });\n    }, [query]);\n    return (\n        <main >\n            <SearchBar filter={filterFilm} />\n            <Suspense fallback={<div>Loading ...</div>}>\n                <SearchList movies={movies} query={query} />\n            </Suspense>\n        </main>\n    )\n};\n\nexport default Movies"],"names":["Poster","styled","SearchItem","SearchList","movies","query","location","useLocation","visibleFilms","filter","movie","title","toLowerCase","includes","length","map","id","poster_path","src","poster","imageNotFound","alt","to","state","from","useForm","register","handleSubmit","reset","onSubmit","data","text","placeholder","type","useState","setMovie","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchBySearchMovies","then","value","Suspense","fallback"],"sourceRoot":""}